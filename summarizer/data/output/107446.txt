

Before we discuss importer configuration in detail in the following sections, we describe the basic process of an import and highlight the points where you can influence the behavior of the importer.

An XML import consists of the following steps:


Read in the XML files


Transform to CoreMedia XML (configurable)


Check consistency


Admit the documents to CoreMedia SCI

The importer is started as a utility program and runs in the background permanently, checking whether new documents for import have arrived at regular intervals. If there are new documents, they are read in.

For every individual import the source documents to be imported must first be gathered together. A source document can exist e.g. as a file, be downloaded over the net or be generated dynamically. This is configurable via a Java programming interface (in the following called Importer-API or API for short). The standard case is that documents exist as files. It is already covered by the classes of the API. If source documents were not originally created for CoreMedia import, they do not yet correspond to the CoreMedia XML Format directly supported by the importer. 

After the source documents have been read in, a configurable step of conversion into the CoreMedia XML Format is carried out. As standard, the importer supports XSLT transformations and transformations based on regular expressions. However, the Importer-API also enables you to insert your own transformers which correspond to the "Java API for XML Processing" (a standard API from Sun, called JAXP in the following).

The transformers can process the source documents either in Stream or in DOM format. The Stream format in particular enables parsers for the insertion of documents which are not in the XML format. Furthermore, a transformer can either process each source document individually (such as e.g. an XSLT transformer) or transform all the source documents in one step. (Unfortunately, the latter exceeds the possibilities of JAXP, so that some expansions have been defined.)

When configuring an importer, you can place multiple transformers one after the other, which are then executed in sequence on import and each receive the result of the previous transformer as input document. For a non-XML format you can enter a thin parser as the first transformer, which transforms the document into an XML format close to the source format. Next, an XSLT transformer can transform this XML format into CoreMedia XML, and finally a CoreMedia filter can allocate the document to the correct repository path.

After processing by the last transformer the documents must be in CoreMedia XML format. The details of this format depend on the document type. The transformer must be suitably adjusted.

The configurable phase of the importer ends when the CoreMedia XML format has been created. Now the structure of the documents created is validated. This also includes consistency checks which go beyond the DTD, especially conformity of the documents to the corresponding document types and the referential integrity.

If the documents are proven consistent  the import is executed, i.e. the documents are incorporated into the CoreMedia SCI.

To give an idea of the expected result, we'll discuss the CoreMedia XML format in detail in the next chapter, especially considering the relationship to the document types. After that we'll outline how to supply source documents and possibilities of transformation. At the end of this chapter, you find a complete example for an importer configuration.

Each importer has a configuration file. Its structure is described in the Administration Manual. However, if you use the full range of Importer API features, the Administration Manual only covers parts of it. You have to supply your administrator with the configuration.