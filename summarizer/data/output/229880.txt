

A Report Query is an abstract representation of a data model-level data fetching mechanism. A Relational Report Query is a specialization of a Report Query, which abstracts over relational database queries using SQL as its query language. Other report query types, like e.g. multidimensional queries with MDX as its language, can be defined and integrated into an Analytics Application if required.

One Report Query Result Consolidator (short name: consolidator) and one or more Report Queries are defined. The queries extract data from a (relational) data source and feed it into the consolidator. The consolidator folds/merges data from queries, filters and post-processes it and returns it to the Analytics Dashboard framework, which applies the report template to the data.

Hence, in order to create a report, you usually configure one consolidator and define one or more queries. The report definition has been significantly simplified: While formerly numerous Java classes for different queries existed, almost all default reports are now implemented by configuration of generic queries. It's convention over configuration.

Configuration example:

<!-- the containing data model definition -->
<property name="dataModel">
  <bean parent="TimeDim_DataModel">
     ...

    <!-- Query Result Consolidator (given as prototype -->
      <property name="consolidatorPrototype">
        <bean parent="...GenericQueryResultConsolidator"/>	
      </property>

 <!-- Queries, whose data will be merged by the consolidator -->
      <property name="queries">
        <list>  

          <!-- Query 1 definition, identified by its name -->
        <bean parent="PreAggregatedData_GenericTimeSeriesQuery">
            <property name="name" value="Q1"/>
            ...
          </bean>

          <!- Query 2 definition -->
          <bean parent="...">
            <property name="name" value="Q2"/>
            ...
          </bean>
        </list>
      </property>

    ...

  </bean>
</property>



