

It is possible to change the look of PDF and Excel reports generated by CoreMedia Analytics by adapting their JasperReports report templates.

Typical use cases would be:

Change the report look to reflect the enterprise's CI (corporate identity): Set the background color, add images, change the text's font style and size, change the layout.
Create newsletters from standard PDF reports: Add additional report parameters.

In order to be able to change the templates, we first explain where the templates must be stored. Second, we briefly explain the graphical template editor that is provided by JasperReports. Last, we explain at a few configuration options that help in a fast validation of report templates.



1. Report templates and report image location

Report templates are looked up in the classpath under the path 'reportTemplates/'. If a template cannot be found there, it is next looked up in the 'WEB-INF/reportTemplates' directory. 

Report templates follow a name convention and location:

HTML report templates (those used by the dashboard reports) are stored in the classpath inside cap-analytics.jar. They should not be changed.


PDF and Excel report templates are stored in the WEB-INF/reportTemplates/ directory. These may be adapted. 

The report templates for PDF export have a '_PDFChart' filename suffix. Hence, the PDF report template with the name 'RankedCategoryReport_AsBarChart' is mapped to the file 'RankedCategoryReport_AsBarChart_PDFChart'
The report templates for Excel have a '_XLS' filename suffix. Please note that the excel report generator does not include images.
No report templates are used for XML output. Instead, a XML report data exporter is used.

Additionally, all report template images must be placed in the directory 'WEB-INF/reportTemplates/reportImages'. This is so in order to allow the graphical report template editor iReport (see next sections) to correctly find and visualize the images. 



2. The graphical Report template tool 'iReport'

JasperReports provides a graphical editor iReport (Product URL: http://jasperforge.org/sf/projects/ireport, Download URL: http://sourceforge.net/project/showfiles.php?group_id=64348) to manipulate report templates. Please consult the iReport online documentation for more information.

When you open the iReport editor and load a report template, the iReport editor will display a structured view of the report template. 

A report template consists of so-called bands which define nested, horizontal sections of a report. A report template consists of the following bands:

background - the entire report background. Can be used to colorize the report background.
title - printed once for each report at the top of the report. Typically used to print the header, including images.
pageHeader - printed once for each page.
columnHeader - printed once on each page before the detail section. For tabular reports used to print the table headers.
detail - holds the report detail information, i.e. the chart or the table information. In tabular reports, the detail section specifies a single report entry only which is used once per report entry.
columnFooter - printed after the detail section
pageFooter - printed at the end of each page
summary - printed at the end of each report.

CoreMedia templates make use of the bands in the following way:

For non-tabular reports (i.e. all PDF reports, which contain a chart image):

The title band contains the report title
The pageHeader band contains the report sentence
The detail band contains the chart image
The columnFooter band contains additional informational messages, e.g. information if the selected report is empty
The pageFooter contains the footer image and the footer text.

Tabular reports are a little different, as JasperReports uses the columnHeader band to print table headers and the detail band to print table entries. Hence,

The title band contains the report title
The pageHeader band contains the report sentence
The columnHeader band contains the tabular data headers
The detail band contains a single table entry definition
The columnFooter band contains additional informational messages and the footer information.

Note: The footer information had to be placed in the columnFooter band or else JasperReports would inverse the order of messages and footer.

Report parameters and values

Report data are passed into the reports as report variables, which are denoted as $F{varName} in the template. Each report template makes use of the following variables plus additional ones:

X_VALUE: The x or category value, which, depending on the report type, is given as a Comparable (typically String or Numeric Value)
X_VALUE_DISPLAYNAME: The displayname of the category value, given as a String
Y_0: The y-value given as a Double
Any numeric value that has been read by a Generic Query will be passed into the report template as double values (e.g. Y1, Y2, PERCENTAGE, RANK, ...)
Any attributes (String and Boolean values) that have been read by a Generic Query will be passed into the report template
Annotations will be passed into the report template by name "ANNOTATIONS".

The default report customizer provides four parameters, which are referenced as $P{parameterName:} in the template:

AUS_NAME: The user name (if the current user is authenticated, else an empty String). It is given as a String.
GENERATION_TIME. The generation time, given as a localized date and time String.
INSTANCE_TITLE: The report title, given as a localized String.
INSTANCE_SENTENCE: The report sentence, given as a localized String.
EMPTYREPORT: A flag indicating whether the report is empty (does not contain data), given as a java.lang.Boolean object.
EMPTYREPORT_SENTENCE: A localized message explaining that the report is empty, given as a String.

As the report template render mechanism does not provide means to lookup information dynamically from the Analytics User Session or Report Instance, the localized and stringified information are passed into the template. This may change in future version in order to provide more flexibility.

Image location re-mapping

While iReport allows images to be included as String (absolute filename), by URL or by InputStreeam, only filenames given as Strings are supported by CoreMedia's rendering mechanism. As iReport stores the image's absolute path as a String in the report template, the following precautions have been taken to map absolute image paths to relative paths:

When a report template is loaded, all image references that contain the template '...reportImages<file separator><imagename>' are on the fly being remapped to '/WEB-INF/reportTemplates/reportImages/<imageName>'. See the section below to disable this remapping.

Hence, absolute images paths like "C:\\myFolder\\reportImages\\image1.png" and "/opt/reportImages/image2.png" are automatically remapped. If you put all your images into the reportTemplate/reportImages directory, you can be sure that the path mapping is handled correctly.



3. Report template definition

For report template definition, we suggest that you setup the dashboard web application in a development environment where you disable report template caching (see below) and modify report templates deployed in the WEB-INF/reportTemplates directory.

Some configuration options prove useful when designing and testing report templates as well as for troubleshooting:

In framework/spring/analytics-foundation.xml which is located in the file cap-analytics-config.jar, you may change parameters of the DefaultReportRenderFactory:

Set the parameter 'viewTemplateCachingEnabled' to false (default value is 'true') in order to disable template caching.
Set the parameter 'reportImagesLocationReplaced' to false (default value is 'true') in order to prevent the image location remapping. This might prove helpful for troubleshooting.

See the configuration file fragment below for the given details:

<!-- The Analytics User Session Manager -->
<bean name="analyticsUserSessionManager" 
class="com.coremedia.analytics.dashboard.session.user.
AnalyticsUserSessionManager" 
singleton="true" depends-on="log4jConfigurator"/>

  ...

  <property name="reportRendererFactory">
    <bean id="DefaultReportRendererFactory" 
    class="com.coremedia.analytics.dashboard.mvc.view.
    DefaultReportRendererFactory">
      <property name="viewTemplateCachingEnabled" value="false"/>
      <property name="reportImagesLocationReplaced" value="false"/>
    </bean>
  </property>

  ...

</bean>

