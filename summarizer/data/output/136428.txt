

The classes ManageableListener and JMXExample contain a JMX-enabled event listener that can be run as a permanent process and a control class that can set the cache size of the listener dynamically. In order to run this example, you must include the jar files mx4j-remote.jar and mx4j.jar into your class path. E.g., when starting the manageable listener, use the following command:

java -classpath lib/mx4j-remote.jar:lib/mx4j.jar:\
  lib/cap-client.jar:classes \
  com.coremedia.examples.capclient.ManageableListener \
  -url http://localhost:44441/coremedia/ior \
  -u admin -p admin

Re-opening Connections

The Unified API also supports the re-opening of closed connections. After a connection has been re-opened, the listeners have all been removed from the listener sets and blobs may have been rendered unusable, but the repositories, services and CapObjects have returned to their previous state, allowing reads and writes. 

The cache object that is associated with the connection does not remain stable. Instead, a new cache object is created whenever the connection is opened.

This makes it possible to create a perpetually running client that releases its licenses when it is idle for an extended period of time. Of course, the re-acquisition of contested licenses may fail, so that this pattern is not suitable for system components with strict availability requirements.

Automatic Reconnect after Server or Network Problems

The Unified API supports reconnects to servers after network problems and even after the servers are restarted. The connection remains open while a reconnect is attempted, but read and write accesses may fail with an exception.

In the case of the content and user repository, the event streams are re-established and no events are lost. In the case of the workflow repository, events may be lost, but all caches are properly invalidated after the reconnect.

If the document types are changed in any way while the Content Server is down, a reconnect may fail in unexpected ways. Always shut down all clients before modifying the document type declarations.