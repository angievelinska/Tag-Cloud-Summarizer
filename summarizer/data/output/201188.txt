

A client-side action consists of a client-side and a server-side implementation, so it's running partly on both sides. Whereas client-side actions run on behalf of the client user, server-side actions run on behalf of the workflow user. While the client part of the action is running, the server side transaction is still active. Client actions always have a timeout after which the action is aborted on the server side, the client side is not affected by this. ClientActions should not require user interaction, if possible, to save precious server resources. 

Precisely, a client action consists of three parts: 

A server-side action.
A client-side event listener.
A client-side command to execute. 

The three parts will be executed in the following way:

Define the action from the workflow definition using the class attribute.
The CoreMedia Workflow Server executes the server-side stub. It creates the parameter list which it includes in the event.
The event will be received by the client which calls the handle() method of the client-side event listener.
The event listener has to return a callback ID to the server. You can evaluate the event and start some action from the event listener. E.g. the event listener belonging to the CoreMedia Editor will execute the action the server noticed in the event.

