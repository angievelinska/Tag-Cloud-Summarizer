

The owner of "Chez Andre'' needs some additional functionality for his website. A special workflow shall control the process of publication which can be conveniently started in the browser. One problem is, that the CAE runs under a special system user who cannot start workflows. Furthermore, each author is responsible for his/her own work, and anonymous activities under one ``super'' user is often not wanted. Hence, a login mechanism is required in order to authenticate and authorize users. It depends on your requirements, how fine grained you want to control the access. This demo will use the user management of CoreMedia CMS because an actual session is needed. Other scenarios, e.g. a personalized website, perhaps can be better realized with a different security mechanism. The demo "Security'' will demonstrate an alternative approach.

Due to the complexity of the login and workflow procedure this demo is split up into two parts. This section describes the first part, which addresses the login, and the next section will continue with the UAPI calls starting the workflow.

In most cases your application desires an authentication for certain areas only. Thus, a little control service is needed which denies the access to protected areas for not authorized requests. This demo uses a small controller called SecretController representing a secret area. Only authorized persons shall receive its secret message, hence it is declared in a separate UrlHandlerMapping in your spring/controllers.xml. In order to protect this mapping, a so-called "interceptor'' is required. An interceptor is called before and after the controller and can manipulate its environment. Therefore it is an ideal remedy for a login mechanism. You can find following snippet in your configuration file controllers.xml: 