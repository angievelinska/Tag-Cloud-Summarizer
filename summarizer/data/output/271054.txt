

The CAE web application is developed in the project, based on the CAE and the Starter Kit. It is responsible for rendering the complete web pages, including usual web page constituents like navigation, logo and overall page layout and style, content, content teasers, search field, breadcrumb, login etc. Standard CAE means are used to implement this functionality, as demonstrated by the Starter Kit.

For pages that contain portlet windows, the portlet container adapter renders the required portlets. The rendering result is provided to the CAE web application, so that it can be included in the web page.
The portlet container adapter is also responsible for detecting URLs that are targeted at a portlet. Handling of these URLs is delegated to the portlet container.
Lastly, the portlet container adapter provides persistent configuration information, such as portlet preferences, from the content repository to the portlet container.

The portlet container is an OEM component that handles interaction with the actual portlets. It sends portlet requests to portlets, answers callbacks from the portlets, and returns the portlets' response to the portlet container adapter. It also maintains the portlet render state.

The tomcat servlet engine hosts the portlet applications. A portlet application is deployed as a web application (war file) with some additional files. The tomcat installation, as well as each portlet application, is augmented in order to support communication between the portlet container and the portlet applications. The tomcat installation is augmented during installation of the CoreMedia Lightweight Portal, and each portlet application is augmented at the time it is deployed.

Request Flow

The portlet container adapter is deployed as a Spring Handler Interceptor. It intercepts a CAE request after the CAE controller has created the model, but before the model is rendered by the view.