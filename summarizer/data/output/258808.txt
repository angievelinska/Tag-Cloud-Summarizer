

As known from ORM, mapping information must be provided to define how the bean type model is represented in a given storage. This information is separated from the bean type model definition to allow mappings of one bean model to different storages. 

Currently, only Fast search engine collections are supported as Content Bean repositories for Content Rules. The Fast mapping definition is stored in the configuration file beanqueryeditor-beantype-storagemapping-fast.xml.

The storage-mapping consists of two steps:
Defining storage-implied properties: Defining properties implied by the bean repository, e.g. creation date information.
Adding property features: Specifying additional query operators suitable for a few properties. Features can be assigned on a per-property basis, hence two String properties may have different feature sets.

1. Defining storage-implied properties

A repository may provide additional properties that are not defined by the bean classes themselves. Typically, such implied properties are metadata properties denoting e.g. ID, revision number, creation time, etc.

Storage-implied properties

can be used in used in queries (run against the specific storage)
must conform to the property types given above
are implicitly available (not necessarily set) for all bean types and all bean instances and hence 
cannot be associated or restricted to a specific bean type

Below you find an example of a storage-implied properties definition. Please note that the Spring bean identifier (here: ¿impliedBeanProperties¿) is relevant.

