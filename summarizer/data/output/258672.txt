

After that, add the database's JDBC driver to the web application's classpath by copying the JAR into WEB-INF/lib/. Finally, adapt the JDBC related configuration properties:

jdbc.driver=oracle.jdbc.driver.OracleDriver
jdbc.url=jdbc:oracle:thin:@localhost:1521:oracle
jdbc.user=username
jdbc.password=password
jdbc.dbname=oracle

Value Cache

Specify a location in the file system where the Http Cache is supposed to store its cached http responses. You can use an arbitrary directory where the servlet container's process (such as Apache Tomcat) has sufficient rights to read and write files. Modify the entry as

valuecache.store.directory=c:/data/httpcache

If you want the Http Cache to run on an empty cache you might set

httpcache.clear=true

which causes all cached values and dependencies to be deleted when starting up the Http Cache. Make sure to remove this entry as soon as the Http Cache has started up if you don't want the HttpCache to be cleared on the next restart.

Running the components

Start the Http Cache web application by starting the servlet container (e.g. Apache Tomcat) where it is deployed in.