

The CoreMedia Content Application Engine mainly comprises components from four sources:

The J2EE container hosts the application servlets and JSP pages
The Spring Framework controls the application setup and main request control flow
The CoreMedia Content Application Engine Frameworks provide content access, transformation, caching and rendering


The Application typically provides custom request controllers, business logic, dataviews for caching and rendering templates. Additionally it can provide id/link formatters for accessing data from other repositories.



The engine can be roughly divided into three responsibilities, following an MVC model for web applications:

The controller part accepts a request and ¿ depending on the request URI ¿ dispatches it to an appropriate controller class that executes the request using the model. The result is passed to the view layer for presentation. The CoreMedia Content Application Engine comes with a number of default controller classes that provide out-of-the-box content display functionality.
The model part comprises business entities stored in the content repository enriched with business logic. The CoreMedia Content Application Engine provides a framework for mapping content objects to generated and/or customized classes. Third party repositories can be integrated as well. Business objects can be cached in this layer.
The view part is responsible for rendering objects into a presentation format, typically HTML. The CoreMedia Content Application Engine provides a flexible framework for object oriented template selection through the ViewDispatcher.

The following picture gives a detailed view of the architecture. The numbers designate a typical request flow and are explained below.

