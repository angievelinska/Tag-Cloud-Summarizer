

In order to set up a read-only view of a document, you have to decide which document and which of the document's properties have to be presented. In order to keep things easy this example shows how to set up a view for a fixed document being the entry page document named FoodOfTheDay. This can be done in spring using the ContentFactoryBean as shown below.



  <bean id="foodOfTheDay"
    class="com.coremedia.editing.cap.ContentFactoryBean"> 
 <property name="path" value="/MenuSite/FoodOfTheDay"/>
  <property name="capRepository" ref="contentRepository"/>
  </bean>



The next step is to create the JSP skeleton for the views that have to be developed. The skeleton includes the import of the required taglibs, the doctype and the content type declarations as well as the HTML skeleton including head and body tags. The body tag will contain the JSF JSP code for displaying the properties of the "foodOfTheDay" bean defined above. In the very first version it simply outputs the page's name property. The example code below shows the views/renderPageName.jsp of the cae/editing example.



<%@ page contentType="text/html;charset=UTF-8" language="java"%>
<%@ taglib uri="http://java.sun.com/jsf/core" prefix="f"%>
<%@ taglib uri="http://java.sun.com/jsf/html" prefix="h"%>
<f:view>
<h:outputText escape="false" value="#{htmlDoctype}"/>
<html>
  <head>
    <title>Simple Editing Services for JSF example</title>
  </head>
  <body>
    <p>
      <h:outputText value="#{foodOfTheDay.properties.name}"/>
    </p>
  </body>
</html>
</f:view>

