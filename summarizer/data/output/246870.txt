

 Component Description Caching and dependency tracking Uses Content Application Engine web application The basis for most of the other components. The CAE web application offers a MVC-model for content applications. It separates the view from the business logic and has declarative caching. Caches dependencies and contents in memory. Tracks invalidations and dependencies. The CAE web application can be used without any other CAE framework component. But in most cases you will use the Http Cache to take advantage of the full power of the framework. Persistent Cache An internal cache component that caches the dependencies and values in a persistent manner. The Persistent Cache is used by the Proactive Engine, the CAE Feeder and the Http Cache. Caches dependencies in a database and values in the filesystem.  Proactive Engine The Proactive Engine automatically computes values and keeps track of invalidations. Re-computes values after invalidation. The Procactive Engine uses the Persistent Cache to store values and dependencies in a persistent way. Http Cache A cache component that caches complete http responses in a persistent way. It is deployed in front of a CAE web application.  Uses the Persistent Cache to save dependencies in a database and values in the file system. CAE Feeder The CAE Feeder builds on the Proactive Engine to feed custom business objects into the Search Engine.  Uses the Proactive Engine to create feedables. Editing Services for JSF Editing Services for JSF is a framework for the development of editorial clients.  Uses the Content Application Engine web application and the Unified API to access the Content Server. Preview-based Editing  A simple framework to make a preview website editable.    Content Rules A framework that allows to create pages, which are composed automatically, following specific rules. Content Rules use the Search Engine to find appropriate content for a page.  Uses the Search Engine for queries.

