

A special custom section exists in the task ImportLogs. This task fetches logs from a number of log providers configured in the workflowserver.properties. Typically, the log providers are Content Application Engines that track viewed pages in a FileAnalyticsLog. The interface AnalyticsLog provides the method

void logCustomEvent(int type, List parameters, long timeMillis)

which you can call in order to add your own events to the log. For example, you might add a purchase event that informs about the number of items bought and the price paid. Or you might record information about site entries through special campaign URLs.

In any case, all type codes that you introduce must be matched  an <EventType> element in this custom section in the custom section of task EvaluateAggregationStrategy. For example, you might write

<!-- START CUSTOM SECTION: Event Types -->
<EventType
  code="1000"
  table="StagingPurchaseEvent"
  timeColumn="eventTime"
  dataColumns="itemCount:Long,prize:Long,department"/>
<!-- END CUSTOM SECTION: Event Types -->

in order to feed purchase events into the table StagingPurchaseEvents. When creating the table, you would have to introduce the TIMESTAMP column eventTime, the numeric columns itemCount and prize and the VARCHAR column department. The event time is automatically subjected to the clock synchronization protocol. You may introduce multiple types of events, using the type codes 1000 to 9999 at your discretion.

Note that you must purge your own staging tables, typically immediately after the events have been postprocessed into fact tables. The import process will take some precautions so that events are not entered twice into the staging tables, but if you do not erase the events, the events will remain in the staging tables forever.

The file config/dataaggregator/spring/dataaggreator-events-example.xml contains an example that shows how to configure a custom event type in Spring XML without the need to adapt the process definition.