

The Object Analyzer is installed as a standalone application that draws its configuration from files stored below the directory config/objectanalyzer/spring. Most of these files belong to the Proactive Engine framework and need not to be changed.

The file proactiveengine.properties defines a database connection that is also reused for the storage of analysis results. In other words, the configured database must be the Analytics Database. In order to simply the creation of consistent backups, it is advisable not to split the functionality across two database instances. This file also indicates the Content Server that should be used.

The Spring bean definition file objectanalyzer-trigger.xml contains the definition of the content evaluator and the content selector. Adapt these bean definitions as needed.

Normally, the Object Analyzer should be attached to the Content Management Server. When attaching it to a Live Server, you must update the property multiSiteMode in the file custom/trigger.xml to true or false, depending on your installation.

To reduce operation overhead you may want to run the Analytics Data Aggregator and the Object Analyzer in a single JVM. To achieve this add the following lines to the file workflowserver.properties:

workflow.server.managers.objectanalyzer.class=\
 com.coremedia.workflow.common.util.SpringContextManager
workflow.server.managers.objectanalyzer.order=10
workflow.server.managers.objectanalyzer.configurations=\
 resourcecontainer:config/objectanalyzer/framework/*-config.jar|\
 /framework/spring/**/*.xml,config/objectanalyzer/spring/*.xml


Additionally, the following line must be added to the file workflowserver.jpif:

JAVA_VM_ARGS="$JAVA_VM_ARGS -Dplaceholder.config.locations=\
resourcecontainer:file://$INSTALL_DIR/config/objectanalyzer/\
framework/*-config.jar|/framework/spring/**/*.properties,file:\
//$INSTALL_DIR/config/objectanalyzer/spring/**/*.properties"

This will establish a second Spring application context in the Workflow Server. Because this manager is given a positive order value, it is initialized after the aggregator manager, thereby ensuring that all database table are already generated when the Object Analyzer is started for the first time.