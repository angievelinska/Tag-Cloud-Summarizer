

The Persistent Cache is a general purpose component for computing and persistently storing values. From an abstract point of view, "computing values" is meant as transforming any source data (such like a CoreMedia CMS content) by applying some business logic on it. 
When computing a value, dependencies of this value on other objects are tracked by the Persistent Cache. A modification on any dependent object will lead to the value¿s ¿invalidation¿ and therefore to its removal from the cache.

Example:

A PDF document is computed from several CoreMedia CMS contents. During computation, all contents which are taken into account for this value are tracked as dependencies. A change to any of these contents will lead to the PDF document's invalidation.

A client may use the cache to avoid unnecessary repeated computation of values which have not changed since their latest computation. Due to the Persistent Cache¿s dependency tracking feature, a re-computation will be performed only in case that the value¿s dependencies have changed. 
The computation results are made persistent, so they are able to endure a restart or a crash. Furthermore, any invalidations that have occurred during downtime are  detected and processed after a restart.

The Persistent Cache is the base for other components, such as the Proactive Engine, the CAE Feeder and the Http Cache. This chapter aims to give you a basic understanding of the things which are happening behind the scenes, rather than describing how to use the cache directly in your application.