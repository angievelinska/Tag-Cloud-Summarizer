

This section contains some guidelines or rules of thumb for the proper definition of dataviews.

Define the property configuration recursively

You have to ensure that a bean's dataview configuration is recursively reachable from the root bean's dataview configuration. For every property returning this bean, a "bridging" dataview configuration entry needs to be added. In order to prevent the cache to be filled with unecessary "bridge" properties, the association type "dynamic" might be used, e.g. 

<dataview appliesTo="com.mycompany.PageBean">
  <property name="content" associationType="dynamic"/>
</dataview>

Why is this important?

From a dataview's point of view, the process of rendering nested bean takes place as follows:
The controller computes the root bean (containing nested beans) from an incoming request
The controller invokes DataViewFactory#loadCached(bean, name) for this bean in order to a apply a dataview
The controller passes the bean to the rendering engine (and therefore to the JSPs) where the bean's properties are accessed and rendered
When accessing a bean property which is returning further beans, a dataview will be applied automatically to these sub beans

In other words, the initial appliance of a dataview to the root bean leads to a recursive appliance of dataviews to all sub beans. Unfortunately, this is true in case that there is a dataview configuration (dataviews.xml) for every relevant bean/property only. Let's say there is no such configuration for the root bean, then no dataviews will be applied to the sub beans automatically and these beans will be returned as they are. As a consequence, the sub beans wouldn't be cached even if there is a dataview configuration available for them.

Example

There is a PageBean having a JSP-template

public interface PageBean {
  ArticleBean getContent();
}
<cm:include target="${self.content}"/>

which includes the rendering of an ArticleBean

public interface ArticleBean {
  String getHeadline()
}
<c:out value="${self.headline}"/>

If there is a dataview configuration for the (supposed "expensive") property "headline"

<dataview appliesTo="com.mycompany.Article">
  <property name="headline" associationType="static"/>
</dataview>

without defining a configuration for the root bean 

<dataview appliesTo="com.mycompany.PageBean">
  <property name="content" associationType="static"/>
</dataview>

then there won't be any caching of the "headline" property. 