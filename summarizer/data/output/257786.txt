

LongAction

In the following, an action that sends a mail is implemented. Because the mail server is a external component that might not respond immediately, a long action is created. We omit the definition of various string fields that hold configuration values for the action and skip immediately the methods for executing the action.

During the first phase the receiver, subject and body text of the mail are determined.

public class MailAction implements LongAction {
  public Object extractParameters(Task task) {
    com.coremedia.cap.workflow.Process process =
      task.getContainingProcess();
    String receiver = process.getString(receiverVariable);
    String subject = process.getString(subjectVariable);
    String text = process.getString(textVariable);
    return new Object[]{receiver, subject, text};
  }

Afterwards, the mail is actually send outside of a DB transaction.

  public Object execute(Object params) {
    Object[] paramArr = (Object[]) params;
    String receiver = (String) paramArr[0];
    String subject = (String) paramArr[1];
    String text = (String) paramArr[2];
    boolean result = false;
    try {
      result = send(host, user, password, 
        from, receiver, subject, text);
    } catch (Exception e) {
      return e;
    }
    return result;
  }
 
  protected boolean send(String host, String username,
    String password, String from,
    String receiver, String subject, String text)
  throws MessagingException, AddressException {
    ...
  }
}

Please see the full source code for details of the mail delivery, which is outside the scope of this manual. Finally, the result is converted into an action result.

  public ActionResult storeResult(Task task, Object result) {
    if (result instanceof Boolean) {
      return new ActionResult(((Boolean)result).booleanValue());
    } else {
      return new ActionResult((Exception)result);
    }
  }
}

Assuming there are process variables receiver, subject, and text, the LongAction could be used in a process definition as follows:

<AutomatedTask name="SendMail" final="true">
  <Action class="com.coremedia.examples.plugin.MailAction"
    host="smtp.company.com"
    user="automailer"
    password="secret"
    from="noreply@company.com"
    receiverVariable="receiver"
    subjectVariable="subject"
    textVariable="text"/>
</AutomatedTask>



