

 Property Value Default Description feeder.executorRetryDelay milliseconds 60000 The delay in milliseconds to wait before the CAE Feeder retries to access the source data after failures to do so. feeder.maxBatchBytes bytes 5242880 (5 MB) The maximum size of a batch in bytes. The CAE Feeder sends a batch to the Search Engine if its maximum size would be exceeded when adding more entries. Note, that byte computation is a rough estimate only. feeder.maxBatchSize int 500 The maximum number of entries in a batch. If the maximum number is reached the CAE Feeder sends the batch to the Search Engine. feeder.maxOpenBatches int 5 The maximum number of batches that are sent by the CAE Feeder and not yet persisted by the Search Engine. The CAE Feeder does not send more batches to the Search Engine if the maximum number has been reached until it receives callbacks about the persistence of batches from the Search Engine. feeder.maxProcessedBatches int 1 The maximum number of batches that are sent by the CAE Feeder and not yet processed by the document processor of the Search Engine. The CAE Feeder does not send more batches to the Search Engine if the maximum number has been reached until it receives callbacks about completed processing from the Search Engine. This property should match the number of available FAST Document Processor Servers. feeder.reconnectRetryDelay milliseconds 600000 The delay in milliseconds to wait before the CAE Feeder tries to reconnect to the Search Engine after failures. feeder.retrySendIdleDelay milliseconds 60000 The CAE Feeder sends a batch which only contains retried entries and is not full with regard to the feeder.maxBatchSize and feeder.maxBatchBytes properties after the CAE Feeder was idle for the time configured in this property. A retried entry is an entry which was sent to the Search Engine before but could not be indexed successfully. If the batch contains entries which are not retried, the value of property feeder.sendIdleDelay is used instead. feeder.retrySendMaxDelay milliseconds 600000 The maximum time in milliseconds between the time the CAE Feeder received an error from the Search Engine and the time, the CAE Feeder tries to send the failed entry as part of a batch to the Search Engine again. The time is exceeded if feeder.maxOpenBatches or feeder.maxProcessedBatches is reached or an error occurs while contacting the Search Engine. If the batch contains entries which are not retried, the value of property feeder.sendMaxDelay is used instead. feeder.beanPropertyMaxBytes bytes -1 The maximum size in bytes for indexed bean properties. Set it to avoid feeding very large blob properties which might cause memory problems in the feeder. The default is unlimited (-1) for backwards compatibility. feeder.fast.collection collection name none (required) The name of an existing collection of the Search Engine to use. feeder.fast.corba.url URL none (required) The URL to connect to the CORBA interface of the FAST Config Server . For example: http://localhost:16005/RPC2 feeder.fast.http.url URL none (required) The URL to connect to the HTTP interface of the FAST Config Server . For example: http://localhost:16005 feeder.fast.naming.host host name none (required) The host name of the FAST Naming Service. For example: localhost feeder.fast.naming.port port none (required) The port of the FAST Naming Service. For example: 16099 feeder.fast.orbServerHost IP or host name  The host of the ORB used by the CAE Feeder for the connection to FAST. FAST connects to the specified host to notify the CAE Feeder about the progress of feeding. feeder.fast.orbServerPort port  The port of the ORB used by the CAE Feeder for the connection to FAST. FAST connects to the specified port to notify the CAE Feeder about the progress of feeding. feeder.sendIdleDelay milliseconds 10000 The CAE Feeder sends a batch which is not full with regard to the feeder.maxBatchSize and feeder.maxBatchBytes properties after the CAE Feeder was idle for the configured time in milliseconds. A CAE Feeder is idle when it is not processing a request from clients such as the Proactive Engine. feeder.sendMaxDelay milliseconds 120000 The maximum time in milliseconds between the CAE Feeder receives a request from a client and it sends this request as part of a batch to the Search Engine. The time is exceeded if feeder.maxOpenBatches or feeder.maxProcessedBatches is reached or an error occurs while contacting the Search Engine. feeder.sendRetryDelay milliseconds 30000 The delay in milliseconds to wait before sending a batch to the Search Engine again after sending failed with an error such as a timeout caused by high load in the Search Engine. jdbc.dbname oracle, mssql, db2, postgresql none (required for setup with Proactive Engine) The name of the database. jdbc.driver driver class none (required for setup with Proactive Engine) The class of the database driver. For example: oracle.jdbc.driver.OracleDriver jdbc.url URL none (required for setup with Proactive Engine) The URL to connect to the database. jdbc.user user name none (required for setup with Proactive Engine) The name of the user to connect to the database. jdbc.password password none (required for setup with Proactive Engine) The password of the user to connect to the database. dependencyStore.maxTransactionWeight number 2147483647 (unlimited) 

The maximum number of keys to change in a single database transaction. This can be used to reduce the maximum size of database transactions.

For example, a change of a single dependency can lead to lots of invalidated keys in the database. By default, all invalidated keys and their dependency entries will be deleted in the database in one database transaction. Such a large transaction may lead to database problems like full transaction logs. To prevent such problems, you can use this option to limit the number of keys changed in the database. For example, if the option is set to 100, only 100 keys plus their dependency entries will be deleted in one transaction. Further keys will be deleted in additional transactions. logging.configuration file path none (required) The path to the Apache Log4j configuration file. The path is relative to <InstallRoot>. For example: ./config/caefeeder/log4j.properties management.jmxremote.url URL none (required) The URL under which the component registers a JMX connector server for management. For example: service:jmx:jmxmp://localhost:5555/ repository.user user name none (required for setup with Proactive Engine) The name of the user to connect to the CoreMedia Content Server. repository.password password none (required for setup with Proactive Engine) The password of the user to connect to the CoreMedia Content Server. repository.domain domain none (required for setup with Proactive Engine) The domain of the user to connect to the CoreMedia Content Server. Empty String for a built-in user. repository.url URL none (required for setup with Proactive Engine) The URL to the IOR of the CoreMedia Content Server.

