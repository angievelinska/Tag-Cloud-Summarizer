

Fast Recovery with Slave Live Server's backup

Be aware, that it might be necessary to copy the database backup to other Slave Live Servers, as well (see step 2).  
Stop the Master Live Server. 
To select the Slave Live Server database from which you want to take the backup, you have to take the current sequence numbers of all Slave Live Servers. You get the sequence number by executing the following SQL statement on every Slave Live Server database:

3* SELECT  * FROM system WHERE property='replicator_remote';
3* The sequence number of some (or all) Slave Live Servers will be the same. If not, determine the most often occurring sequence number. In the following, this sequence number is called dedicated sequence number. 
3* Choose one of the Slave Live Servers that has the dedicated sequence number. 
3* In the following, this server is called the dedicated Slave Live Server. Its data will be used to recover the Master Live Server and all Slave Live Servers with a different sequence number than the dedicated sequence number.
3* It is important that the dedicated Slave Live Server is in an consistent state. To check this, the table ReplicatorIdTable has to be empty. If the table is not empty the Slave Live Server is inconsistent. To see the table content, execute the following statement. If the server is inconsistent, choose another Slave Live Server as the dedicated Slave Live Server:
3* SELECT * from ReplicatorIdTable;
3#
Create a backup of the dedicated Slave Live Server's database using database tools. Note that the Slave Live Server needs not to be stopped.
If the passwords on the dedicated Slave Live Server have been encrypted via cm encryptpasswords, the Rijndael key of the Slave Live Server in the file <CoreMediaHome>/etc/keys/<databasename>.<dbuser>.rijndael has to be copied to the respective directory on the Master Live Server (<databasename> and <dbuser> have to be adjusted to the appropriate values of the Master Live Server database). If the directory does not exist on the Master Live Server, you must create it.

3* The file must also be copied to all Slave Live Servers with a different sequence number than the dedicated sequence number.
5#
Delete the full Master Live Server database schema using database tools. 
Import the database backup into the database of the Master Live Server using database tools. 
On the Master Live Server, fetch the last changelog entry with the following SQL statement and note the values of <sequenceno> and <idtag>:

3* SELECT * FROM changelog WHERE sequenceno = (SELECT max(sequenceno) FROM changelog);
8#
On all Slave Live Servers with the same sequence number as the dedicated sequence number, adjust the replicator settings with the following SQL statement (note, that the Slave Live Servers do not have to be stopped, but make sure that the Master Live Server is still not running). Replace <sequenceno> and <idtag> with the values obtained above:

3* UPDATE system SET content='<sequenceno>' WHERE property='replicator_remote';
3* UPDATE system SET content='<sequenceno>' WHERE property='replicator_local';
3* UPDATE system SET content='<idtag>' WHERE property='replicator_tag';
9#
All Slave Live Servers with a different sequence number than the dedicated sequence number must be recovered. To recover, execute the steps 5., 6., and 8. (read Slave Live Server instead of Master Live Server).
Restart the Master Live Server and the Slave Live Servers. Now you can publish content from the Content Server, and Slave Live Servers can replicate the content.

Note, there might be some inconsistencies between Content Server and Master Live Server in respect of some publication events, that did not reach the dedicated Slave Live Server.  This is the case

if the dedicated Slave Live Server is not the one with the highest sequence number,
if the dedicated Slave Live Server  has not been connected to the Master Live Server for a longer time, i.e. that there were publication events that did not reach the Slave Live Server,
if the Master Live Server database crash did hinder the replication process between Master Live Server and Slave Live Servers.

In all these cases, you have to replay all affected publications on the Content Server. To detect the affected publications, you can use the CoreMedia Editor to query all publication events in the specific period.