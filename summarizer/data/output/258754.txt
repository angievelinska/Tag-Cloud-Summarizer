

In the file framework/spring/analytics/analytics-overlay.xml located in the cap-analytics-overlay-config.jar you can find definitions for the session-scoped beans overlayConfiguration and overlayConfiguration_direct. These beans are instances of class com.coremedia.analytics.overlay.OverlayConfiguration, which controls the display of overlay reports. The beans both refer to the same definition, but are provided for different lookup mechanisms.

You can fetch an instance of the bean by calling a static method of OverlayConfiguration:

OverlayConfiguration overlayConfiguration =
  OverlayConfiguration.getConfiguration(httpServletRequest);

This will access the bean overlayConfiguration_direct. Note that you have to provide a reference to the current request object when calling this method.

Please note that this is a session-scoped bean, which means that it exists once per user session. Writing to the bean only changes the behavior of In-Site Analytics for a single session.

The bean contains three properties. The boolean property visible determines whether overlays are visible at all. The property reportInterval contains the string representation of the duration of the displayed reports in seconds. Typical values would be "1800" or "7200", indicating half an hour and two hours, respectively.

The property overlayMode determines which overlays are displayed for links. The permissible values for the overlay mode are constants defined in the class com.coremedia.analytics.overlay.OverlayMode:

CLICK (formerly CLICK_THROUGH) selects the number of clicks on the given link. This is interesting for optimizing individual pages.
SOURCELESS_CLICK selects the number of clicks on links to the same page and in the same context, but regardless of the source page. This is important for optimizing links that appear on many pages like imprint links.
LOYALTY selects the loyalty for clicks on the given link. This is useful for optimizing teasers, which might or might not shape the viewer's expectations correctly.
VIEWS selects the total number of page views for the linked page, regardless of the origin. This helps in deciding whether enough high-profile pages are linked from the current page.

The properties are not completely independent. In particular, a report interval of 15 minutes does not make any sense for the loyalty mode if sessions only time out after half an hour of inactivity.

After setting the bean properties, the preview page must be reloaded to show the updated statistics. If possible, try to reload the page automatically.

By default, there are actions defined in the package com.coremedia.analytics.editing.actions that enable, disable or toggle the status of the property visible, namely TurnInSiteAnalyticsOnAction, TurnInSiteAnalyticsOffAction, TurnAnalyticsSatelliteOnAction, and TurnAnalyticsSatelliteOffAction. Typically, you would use these actions in a Preview-Based Editing menu as described in section.

In the package com.coremedia.analytics.editing you can find some classes that are used to control the overlay parameters, if you want to embed the In-Site Analytics configuration in a more comprehensive configuration interface. Using these classes may simplify the integration of In-Site Analytics into a JSF-based preview application. The class LocalizedReportingIntervalLabelFactory simplifies rendering the stringified report interval. The class LocalizedReportingModeLabelFactory takes care of rendering the report modes. Finally, the class OverlayModeConverter converts converting overlay modes to their string representation and vice versa.