

To define the converter used by a property editor, you have two options:

Specify the converter explicitly at the JSF <input...> component, using the converter attribute or a <f:convert...> or <es:convert...> direction.
Use the following expression for the converter attribute, where ${property.Name} is the name of the property to edit:
converter="#{converterFor[document.type.descriptorsByName.${property.Name}]}"

Using the first option, the converter can be changed and configured directly in the JSP. While this is convenient for testing and experimenting, the second option allows a central configuration and thus makes property conversion easier to maintain and keep consistent.

The application scope Bean converterFor is a com.coremedia.editing.kits.jsf.cap.converters.CapConverterFactory. It allows to configure a powerful mapping from CoreMedia Document property declaration to JSF Converter. You can find the predefined mapping in framework/spring/editing-jsf/dispatcher-servlet/editing-jsf.xml in the cap-editing-jsf-config.jar and an example of customizing it in WEB-INF/spring/editing-jsf/dispatcher-servlet/editing-jsf-views.xml (either open the files or browse the HTML Bean documentation).

The mapping of converterFor allows to define converters on different levels:

To configure a default converter for a simple property type (IntProperty, StringProperty, DateProperty,), set the corresponding configuration property that uses the terminology of the Unified API (integerConverter, stringConverter, calendarConverter).


To configure converters for XmlPropertys, use the configuration property markupConverters of type Map<String,Converter>.

To configure a default converter for a specific XmlGrammar as defined in *-doctypes.xml, use its symbolic name as key and the desired Converter as value.
To configure the default converter of all other grammars, use an asterisk ("*") as the key and the desired Converter  as value.


To configure converters for BlobPropertys, use the configuration property blobConverters  of type Map<String,Converter>.

To configure a default converter for a specific MIME type, use "<primaryType>/<subType>" as the key (e.g. "text/xml") and the desired Converter as value.
To configure a default converter for a specific primary type of a MIME type, use "<primaryType>/*" as the key (e.g. "text/*") and the desired Converter  as value.
To configure a default converter for all BLOBs, use "*/*" as the key (e.g. "text/*") and the desired Converter  as value.
To configure converters for specific properties, use the configuration property propertyDescriptorConverters  of type Map<String,Map<String,Converter>>. The first key is the name of a Document Content type, and the second key is the name of the property, as defined in *-doctypes.xml, and the value is the desired Converter.

