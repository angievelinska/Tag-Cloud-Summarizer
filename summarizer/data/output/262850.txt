

This chapter describes some specific configuration tasks for deploying the CAE to IBM WebSphere.

Configuring IBM WebSphere Application Server for Usage with Editing Services for JSF

Editing Services for JSF is the basis for several components of CoreMedia CMS:

Advanced Query Editor
Bean Query Editor
Differencing
Starter Kit

If you use these components with IBM WebSphere Application Server, you have to do the following configuration:

Before packaging you web application as *.war please follow the basic procedures regarding JSF according to http://www-1.ibm.com/support/docview.wss?uid=swg21243668 : 
Remove jsf-*.jar from WEB-INF/lib of your web application
Remove jtidy.jar and xmlrpc.jar. Using these can lead to various XML parsing problems.
Also remove jstl.jar as WebSphere provides it's own copy.
Remove jmxri.jar and mx4j*.jar
Create a directory ${WAS_INSTALL_ROOT}/optionalLibraries/sun/jsf/lib on the WebSphere machine
Copy jsf-impl.jar and jsf-api.jar to that directory.

Then create the *.war and deploy it to your IBM WebSphere Application Server.

To be able to use the JSF libraries as shared library please go to WebSphere's administrative console and select:
Environment|Shared libraries|New
Add the following classpath:
${WAS_INSTALL_ROOT}/optionalLibraries/sun/jsf/lib/jsf-impl.jar
${WAS_INSTALL_ROOT}/optionalLibraries/sun/jsf/lib/jsf-api.jar
and enter a name, i.e. "sun-jsf"

Now add the shared JSF libraries to the deployed web application:
Applications|Enterprise Applications|Your webapp
Select Shared Library References.
Add the library "sun-jsf" to both Application and Module. Exit the dialogue with OK.

Now adapt the applications classloader:
Select Applications|Enterprise Applications|<Your webapp>|Class loading and update detection
Choose "Classes loaded with application class loaders first."
Select the Applications|Enterprise Applications|<Your webapp>|Manage Modules
Click on your web application's module.


Choose "Classes loaded with application class loaders first."



Configuring the CAE to use WebSphere's ORB

IBM advises not to instantiate your own ORB, but instead use the one provided by the application server.


Add the following to the file  .../WEB-INF/spring/cae-mbeans.xml. 

<customize:replace bean="connection" property="otherParameters">
  <map>
    <entry key="orb" value-ref="wsorb"/>
  </map>
</customize:replace>

<bean id="wsorb" 
class="org.springframework.jndi.JndiObjectFactoryBean">
  <property name="jndiName" value="java:comp/ORB"/>
  <property name="expectedType" value="org.omg.CORBA.ORB"/>
</bean>

