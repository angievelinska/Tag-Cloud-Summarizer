

A few important patterns are used by the generated content beans. Keep them in mind when you extend these classes: 

Construction: content beans are both used to denote content as well as references (links) to content. A content bean used as a link must be cheap to construct. Thus, at construction time, a content bean should only set the information required to identify itself: its contentBeanFactory and content object (and maybe other required services like a DAO or a JDBC datasource). No content should be retrieved. The source code generator fulfils this requirement by generating a default constructor and the two getters defined in the ContentBean interface. When extending, you should not modify the default constructor in the generated beans.
Identity, equality: two content beans originating from the same factory for the same content object must be equal. They identify the same business identity. Generated content beans fulfil this requirement by inheriting #equals and #hashCode from AbstractContentBean which is defined in terms of the corresponding content methods. When extending, you should not override equals or hashCode.
Mutable state: a content bean must not store mutable information. Caching of mutable state is performed in other layers. All methods of a content bean should always modify the content object directly. This way, a content bean can never be invalid when the repository contents change. When extending, you should not declare any fields in a content bean except for read-only, immutable service references.

These patterns apply to any object that you design as a representative for data stored in an external data source and that you want to use within the dataview caching framework. They ensure that the object is lightweight, interchangeable and always valid. We will deal with efficient data retrieval at a later stage. Other designs are also possible, e.g., stateful business objects directly loaded from a DAO, but they require a more complicated interaction with the caching framework that is not covered in this manual.