

There are basically two ways to add the contextinfo tag:

Surround the relevant html element by the <pbe:adscontextinfo /> tag:

Example 1:

<pbe:adscontextinfo event="contextmenu">
  <td>Your article text.</td>
</pbe:adscontextinfo>




Provide the same id to the element and the <pbe:adscontextinfo /> tag:

Example 2:

<td id="id42">Your article text.</td>
 <pbe:adscontextinfo id="id42" event="contextmenu"/>

Both examples enable a context menu, that will be opened when the user triggers a context menu javascript event, which means a click of the right mouse button above the <td> element. The first version surrounds the tag body with a <span> tag that gets an automatically generated id. The inserted <span> tag may make it necessary to adapt your css style sheets. If you don't want to change your style sheets use the second way. The drawback of the second version is, that the ids added to to the html elements are still visible in the generated html code, even if Preview-based Editing is turned off. 

As default the current resource from the context is opened. If the context menu should be related to a different resource, the resource attribute tells the tag, which CoreMedia resource is connected to the tagged area:

<pbe:adscontextinfo resource="<%=""+document.getId()%>" 
  event="contextinfo"/>

The double quotes in front of the document.getId() have been added to convert the expression to String, as the taglib expects a String. Provide any javascript event in the event attribute. If you don't provide an event no contextmenu can be opened.

Nested Tags

Contextinfo tags may also be nested, e.g. to define the same container for several sub contextinfo tags. Generation of nested tags may be distributed over several templates, as the dependencies are calculated on the fully generated web page.

Example 3:

<pbe:adscontextinfo container="<%=""+page.getId()%>">
 ...
 <pbe:adscontextinfo resource="<%=""+topdocs[i1].getId()%>" 
   event="contextmenu" property="Top" >
 <td>My article text.</td>
 </pbe:adscontextinfo>
 ...
 <pbe:adscontextinfo resource="<%=""+sidedocs[i2].getId()%>" 
  event="contextmenu" property="Side" >
 <td>Other article text.</td>
 </pbe:adscontextinfo>
 ...
</pbe:adscontextinfo>

JSTL-Expressions

You may also use JSTL-expressions in all tag attributes.

Example 4 (jstl):

<pbe:adscontextinfo resource="${doc.id}" 
  event="contextmenu" property="${linklist.name}" 
  container="${page.id}">
 <td>My article text.</td>
</pbe:adscontextinfo>