

Portlet preferences are stored in the CoreMedia repository per portlet instance. Portlet instances are represented by documents of type CMPortletInst.

CMPortletInst documents are automatically created when deploying portlets with the Deployment Tool (see section 3.1. Deploying Portlet Application). The deployment tool automatically creates a link to the CMPortletDef document (which specifies the portlet name and portlet application) and initializes the portlet preferences with the preferences from the portlet.xml Portlet Deployment Descriptor.

The default location of CMPortletInst documents is /System/Portlets/Instances but other repository paths can be specified during the deployment.

Editing Preferences

You can edit the preferences of a portlet instance either by using the portlet's EDIT mode, or by directly editing the corresponding CMPortletInst document. For editing the CMPortletInst document, you can use the CoreMedia Editor or WebEditor.

Using the portlet EDIT mode

In EDIT mode, a portlet application renders its own Web UI for changing its preferences.

In the content management environment (i.e. preview), a portlet supporting EDIT mode can be switched to EDIT mode if a user is logged in for Preview-Based Editing, and if that user has sufficient privileges.

The CoreMedia Lightweight Portal offers three ways for entering EDIT mode:

using Preview Based Editing
using window controls
using edit links rendered by the portlet itself

Any changes to the preferences done through the portlet application's interface are stored back to the CMPortletInst document. Note that preferences are specific for this portlet instance, but are the same for all users viewing any portlet window linked to that portlet instance. The current user id is only used to determine content write permission, and the user's name is recorded in the version history of the CMPortletInst document.

Section 2.3. Editing Portlet Preferences in the introduction gives a detailed example of using Preview Based Editing on a portlet window to enter EDIT mode. For editorial users, this is the most convenient approach.

By default, portlet windows in the CAE do not have a frame with window controls. If window controls are configured (e.g. as described in section 2.4. Adding Window Controls), you can click the respective control to change the portlet's mode.

Some portlet applications may also integrate a UI element for entering EDIT mode into their normal (VIEW mode) markup, e.g. when a portlet instance is not properly configured yet.

Note that EDIT mode is not supported in the live environment, as all content changes have to pass through the regular publication process.

Editing Preferences in the CoreMedia editor

A CMPortletInst document stores preference values in its XML property preferences. The property contains a sequence of preferences. Each preference has a name and zero or more values, all of which are strings. A preference may be flagged as read-only.

A portlet instance's preferences are read from the CMPortletInst document, which can be edited using any CoreMedia content editing tool. When the document is updated, the portlet application will see the new values on the next request.

Currently it is only possible to edit the preferences as plain XML text.

The preferences XML property uses the schema http://www.coremedia.com/2008/clip/portlet-preferences, which references the relevant part of the official JSR 286 portlet application descriptor schema.

Let's start with the most simple preferences: empty preferences. Each XML property must contain the root tag clip:portlet-preferences with a suitable namespace declaration. And for empty preferences this is all you have to enter: