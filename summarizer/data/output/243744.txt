

Line 1 - 4: The getInitialAssignment() method is called by the workflow server. The parameter processInstance passes an instance of the workflow to the method, which allows you to access workflow variables, the parameter enumeration contains the selected resources, which are passed to the method to put them into the workflow variables.

Line 5: The variables of the workflow process definition are stored in the WfVariableAssignment array.

Line 6 - 7: In order to work with the selected documents, you need to create a ResourceValue from the ResourceHolderEnumeration. For this you can use the static method getValues() of the ResourceHolderValueConverter class.

Line 8: Now you can use the helper method filterValues() which extracts the documents from the selected resources.

Line 9 - 16: You iterate over all workflow variables stored in WfVariableAssignment.

Line 10: Extracts the first WfVariableAssignment from the workflow variables.

Line 11 - 12: Now you can get the first WfVariable from the workflow instance. 

Line 13: As your workflow definition defines a variable named  MyVariable of the type Document. 

Line 14: Now you can assign the ResourceValue to the WfVariableAssignment.

Line 15: Return the WfVariableAssignment to the editor, which in turn hands it over to the worklfow server.

In Example 5.10.2d you see two more possibilities to customize the workflow startup class. The method isSkippingVariableDialog shows how to skip the initial dialog for the assignment of variables. If you want to allow the user to change the variables, return false. The method performInitialActions allows you to perform actions at start time of the process. The default implementation GenericWorkflowStartup is empty.