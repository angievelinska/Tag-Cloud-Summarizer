

Here we will sketch typical use cases for the Unified API.

Content Delivery

Situation: You want to deliver content that is stored in the CoreMedia CMS, e.g., when generating a web site.

Solution: The Unified API is used inside the CoreMedia Content Application Engine to access persistent data. The engine is used for efficient caching on higher levels. JSPs render your content.

Form-driven Content Modification

Situation: You want to create a web application that allows certain recurring modifications of the content, e.g., changing a price information.

Solution: Again, you use the CoreMedia Content Application Engine, this time augmented with the write functionality of the Unified API.

Command Line Tool

Situation: You want to create a command line tool that automates certain administrative tasks, e.g., the creation of users with a predefined set of query documents.

Solution: You program the tool using the Unified API, possibly starting with the base client provided as a code example.

Automated Agents

Situation: You want to create background processes that perform automated actions when certain events occur, e.g., starting a workflow when a document is moved into a certain folder.

Solution: You create an appropriate repository listener using the Unified API and add the required actions in Java code.

Workflow Actions

Situation: You want to perform very complicated actions during certain workflow tasks.

Solution: You program a workflow action using the Unified API, updating content objects and workflow variables as needed. You might want to create a user-specific session for modifications.

Performers Policies

Situation: You want to control the set of users to whom a certain task is offered.

Solution: You program a performers policy using the Unified API, evaluating the state of workflow variables and referenced content while determining one or more users who may execute the task. Possibly, you also create a right policy to limit the permissible activities of the chosen users.

