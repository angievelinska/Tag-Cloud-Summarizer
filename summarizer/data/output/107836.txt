

The cache in the CoreMedia Active Delivery Server can be described as follows: 

Keys: ResourceUris objects form the cache keys 
Values: The cache contains the generated pages 


Cache Function: Templates that must be deterministic with respect to their input, i.e. they must create the same page for the same ResourceUri, assuming the state of the CoreMedia repository is unchanged. The output of a template cannot be stored easily in the cache if the template requests information from third-party systems, outputs the current time, evaluates features of the HTTP request (e.g. JSP request attributes), etc. 

External state: The output of templates may depend on the state of the CoreMedia repository; an automatic mechanism tracks all accesses to the repository during the generation of a page as dependencies. This mechanism is explained in more detail below. This means that templates which are marked as cacheable can freely access the information from the ResourceUri and the content of the CoreMedia repository - but not more. 
Invalidation: The CoreMedia server notifies the ADS about all changes to the repository so that the ADS can invalidate generated pages immediately. When a pre-generator is used, all changes belonging to a publication are considered together on the Live Server. 
The cache size can be influenced with the Generator#pageCacheSize bean property. An LRU algorithm is used as the replacement strategy. In addition to the pages called from outside, all pages used via include are also stored, so that the actual number of pages in the main memory is generally higher than the configured pageCacheSize. 

In order to subject a template to caching, insert the coremedia:page directive within a JSP comment into the template. Note that this directive needs to be part of the JSP file, it cannot be included through a JSP @include directive: 