

 Property Value Default Description cap.server.http.port Port  This property defines the port of the server's internal web server. The web server returns the server IOR for connecting clients and delivers configuration and jar files for webstart. cap.server.http.host String  This property defines the hostname or IP of the server's internal web server. cap.server.http.bindAllInterfaces true/false true This property defines if all interfaces are bound to the port defined in cap.server.http.port. If set to false, only the interface from cap.server.http.host is bound. Note that localhost is usually bound to the separate loopback interface. cap.server.ORBServerHost String  The host of the ORB which the Content Server uses. cap.server.ORBServerPort Int  The port of the ORB which the Content Server uses. cap.server.orb.keepalive.port Int 0 

The port to use for the ORB keepalive mechanism. Use this mechanism if you experience occasional hang-ups of the server that last for about a minute.

Set to a positive number to specify a fixed port. When set to 0, an arbitrary port will be used for keepalive. When set to -1, the keepalive mechanism is not activated.

 cap.server.orb.keepalive.interval Int 1000 The interval between two keepalive requests in milliseconds, if keepalive is activated. cap.client.repository.home Path /Home Using this property, you can define the folder which will be used to store the home folders of the users. The whole folder hierarchy of the home folders is only visible to the administrator. Each "non-administrator" user will only see one home folder with the path defined in cap.client.repository.home containing his personal files, e.g. the preferences. The default folder is /Home which will be automatically created by the system. If you define another folder, you need to create this folder by your own. cap.client.repository.system Path /System Using this property, you can define the system folder. It contains for example the public dictionary of the spell checker. The default folder is /System which will be automatically created by the system. If you define another folder you need to create this folder by your own. cap.server.multipleLiveServers true/false false This property defines whether the server publishes to multiple live servers. Note that this flag cannot be easily changed after the first start of the Content Management Server. cap.server.documentTypes URL/Path 

resourcecontainer:config/contentserver/framework/*-config.jar|/framework/doctypes/*.xml,

config/contentserver/doctypes/*.xml,

config/contentserver/doctypes/*/*.xml 

This property defines where the server finds the xml file(s) containing the document type definitions. You can specify multiple files as a comma separated list or use Ant-style patterns with wildcards like '*', '?' and '**'. 

Example:

config/contentserver/doctypes/doctypes*.xml matches all files with a suffix xml and a prefix doctypes in the config/contentserver/doctypes directory.

config/contentserver/**doctypes*xml matches  all files with a suffix xml and a prefix doctypes in all directories below config/contentserver. cap.server.documentTypes.xmlSchema.enable  true/false  This property defines whether the doctypes definition can be defined according to the coremedia-doctypes.dtd DTD definition (false) or the coremedia-doctypes.xsd XML Schema definition (true). cap.server.resourcecache.size Int 60000 This property defines the resource cache size, i.e., the number of resources the server holds in memory. This value should sometimes be adapted to the increasing number of resources in the actual working set. If the value is too small, the server does not perform well. One resource needs about 2kB of heap space. cap.server.license URL/Path properties/corem/license.zip This property defines where the server finds the license file. cap.server.login.bouncers URL/Path  This property points to the optional login bouncer configuration. A login bouncer can grant or deny access to the Content Server based on the characteristics of the user and the set of currently logged in users. cap.server.workflow.server.url URL  This property defines the IOR URL of the Workflow Server. Clients of the Content Management Server access this property before connection to the Workflow Server. cap.server.useStrictWorkflow true/false  This property enforces the strict workflow mode. That is, the approver of a resource must be different from the editor. This is checked independently of the workflow engine, and should only be used in cases where a custom workflow definition is not an option. cap.server.checkUniqueDbAccess true/false false This property determines whether to check for another server that is running concurrently on the same database on server startup. For compatibility, this property defaults to false, but it is recommended to set it to true in order to prevent data corruption. cap.server.uniqueDbAccessWriteInterval Int 0 If unique DB access is checked and if this property is positive, this property determines the number of seconds between two writes of the current timestamp to the database to indicate the liveness of the server; if 0 or negative the server neither writes a timestamp regularly nor expects a timestamp to be written; this value defaults to 0. cap.server.usercache.size Int 500 This property defines the size of the user cache. It limits the maximum number of users which can be found in one search for users in the user window of the CoreMedia Editor. Set the property to the size of the largest user search you want to perform, or the number of concurrently working users, whichever is greater. cap.server.groupcache.size Int 500 This property defines the size of the group cache. It limits the maximum number of groups which can be found in one search for groups in the user window of the CoreMedia Editor. Set the property so that all groups connected to rights can be cached in memory. cap.server.rightscache.size Int 3000 This property defines the size of the rights cache. This cache stores the results of right calculations per resource, document type and member. If you have lots of different resources, document types and users you might need to adapt the value of the property. Check the proper size of the cache by examining the cache misses and faults in the log. To activate the log output of the rights cache set the cap.server.rightscache.status.interval property to a value larger than zero.  cap.server.rightscache.status.interval Int 0 This property defines the interval (in seconds) at which log output of the rights cache is written. "0" means, that no log output is written. cap.server.blob.channel.timeout Int 60 This property sets the timeout for streaming blobs to and from the database in seconds. In general, you don't have to change the default value. It is provided for exceptional cases, when the connection to the database is unreliable. cap.server.management.jmxremote.url URL service:jmx:jmxmp://localhost:8014 If the property is set, the mbeans of the Content Server are made available via JMX, providing access to selected configuration properties and some runtime states and statistics. By default, the property is disabled.

Properties for SSL connection

 Property Value Default Description cap.server.https.port Int  The SSL port of the internal web server of the Content Server, that will be used for the connection. cap.server.https.keystore Path  The path to the keystore file which contains the certificate for the connection. cap.server.https.password String  The password of the keystore. cap.server.https.keypassword String  The key to the certificate.



Properties for the integration of the CoreMedia Search Engine: Property Value Default Description cap.server.search.enable true or false false Enables the full text search ("true"). cap.server.search.corba.url URL http://<hostname>:16005/RPC2 This property defines the URL to connect to the CoreMedia Search Engine by means of CORBA. This is the URL of the CORBA interface of the FAST Config Server. cap.server.search.http.url URL http://<hostname>:16005 This property defines the URL to connect to the CoreMedia Search Engine by means of HTTP. This is the URL of the HTTP interface of the FAST Config Server. cap.server.search.naming.host String  This property defines the name of the host of the naming service of the CoreMedia Search Engine. This is the name of the host of the FAST Naming Service. cap.server.search.naming.port Port 16099 This property defines the port of the naming service of the CoreMedia Search Engine. This is the port of the FAST Naming Service. cap.server.search.qrserver.<n> URL  

Optional property to configure the Content Server to use FAST QR Servers for full-text searches. Replace <n> with different numbers for multiple QR Servers. If set, the Content Server will connect directly to the QR Servers for searches. This can be used to implement failover with a FAST multi-node installation. The Content Server transparently switches to the next configured QR Server after search failures. For example:

cap.server.search.qrserver.1=http://host1:15100

cap.server.search.qrserver.2=http://host2:15100  cap.server.search.collection String collection This property defines the collection of the CoreMedia Search Engine to use. cap.server.search.useFolderIds true or false false Use folder ids when searching in sub folders. The default is false for backward compatibility with existing search engine installations.
It's recommended to set it to true to apply the bugfix for BUNGSBERG-1986. Make sure the FAST index profile contains the field "folderpath" before enabling this. cap.server.feeder.enable true or false false Enables the feeder ("true"). cap.server.feeder.config URL properties/corem/feeder.xml The XML file with the configuration of the CoreMedia Search Engine Feeder. cap.server.feeder.fast.ORBServerHost hostname or IP  The host of the ORB used by the Search Engine Feeder. The Search Engine connects to the specified host to notify the Search Engine Feeder about the progress of feeding. cap.server.feeder.fast.ORBServerPort port  The port of the ORB used by the Search Engine Feeder. The Search Engine connects to this port to notify the Search Engine Feeder about the progress of feeding.

