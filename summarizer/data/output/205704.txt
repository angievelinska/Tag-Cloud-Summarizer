

In CoreMedia queries, constants and document fields take on the role of the numbers, and instead of arithmetic operations, there are logical operators and type-specific comparative operators.

Access to the properties of a document type is only given if the corresponding document type is requested. Otherwise, ambiguities could arise.

The value of a property can be compared to constants and other properties of the same type. Furthermore, a substring operator is also available in strings and Sgml properties.

If supported by the relational database in use, additional operators for full-text search are also offered for XML properties. These operators search for XML properties in which a word appears which

matches the search word exactly: containsExact,
begins with the search word: containsPrefix, or
has the same stem as the search word: containsStem.

The operators supported by the database can be obtained from the copy of the hox.corem.servlets.QueryFactory class in use. If the database does not support any of the special full-text operators, a substring search can still be carried out on the XML properties with the operator contains. However, no word boundaries are taken into account.

As stated above, you can also refer to pre-defined properties in the search criterium. In this way, boolean value property expressions can occur. When using these, it should be noted that access to a boolean value property, e.g. isDeleted_, is not a complete search expression; the queried value must be compared with a boolean constant:

q.field("isDeleted_"); q.booleanValue(true); q.equal(); 

The pre-defined properties in queries use slightly different names in comparison with the pre-defined properties in Document#getProperty : the user-value properties are replaced by an integer-value property which gives the ID of the particular user. To make the use easier, there are methods which directly compare the property with a user entered by name. The details are shown in the following table.