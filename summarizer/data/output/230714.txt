

Letting the user browse (hierarchical) lists of items is a highly interactive task, as it includes navigating, paging, and sorting. While this is not a use case of actual editing, it is required for other editing use cases such as list editing, when adding an existing item to a list by choosing it from a repository of items.

Following the MVC paradigm, ES4JSF lets you reuse the predefined or define your own models, views, and controllers. There are lists, tables, trees, and table-trees (tabular representation of hierarchical data). All corresponding classes have a "Bean" prefix to emphasize that we talk about lists, trees, etc. of Java Beans. Especially for the table, this makes a difference: While general table models allow to arbitrarily compute the contents of each cell, a BeanTableModel declares a list of Beans that each correspond to one table row and computes the cell value from properties of the row Bean.

TODO



diese Themen sollten behandelt werden

¿[Jsf]BeanTable[Tree][Model], BeanColumn[Model], <h:dataTable> 

¿Paging support (Actions, Rendering)

¿Sorting 

¿SortedListModel, SortedBeanTable[Tree]Model, SortColumnModel, BeanColumn revisited 

¿JsfBeanTable[Tree]: Actions for sorting

¿Selection (mkl) 

¿Trees: UpAction, openTreeLeadSelection

