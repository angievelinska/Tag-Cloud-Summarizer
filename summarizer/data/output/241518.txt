

In this example we will be using the predefined WAGE LoginAction (com.coremedia.cap.wage.actions.LoginAction) instead of our own LoginAction from XXX.

We first define a (DynaActionForm) loginForm (the same as we had for our LoginAction), and a global Forward "login". The "login" Action then uses the WAGE LoginAction, our loginForm, and as "input" Forward the (globally) defined "login" Forward.

In order to use ResourceActionForwards, you have to set the inputForward property of the request processor to "true", so that the input property of each Action is interpreted as the name of an ActionForward.

The "editDish" Action also uses an "input" Forward, which will be used if errors occur during the validation of the associated ActionForm. Therefore if for example an image with the wrong MIME-type is being uploaded, the Action forwards to the "input" Forward, showing the editing form again, with an error message displayed by the <html:errors/> tag.

The "nocache" property of the request processor is inherited from the struts ControllerConfig. By setting it to "true", we ensure that the browser sends an HTTP request back to struts for each action taken by the user. This is important because our pages are dynamic and (partly) cached in the Authoring Server, so the Browser must not cache them, too.