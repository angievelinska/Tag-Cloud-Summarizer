

The tables that are defined in the Analytics Database can be grouped according to their usage during data aggregation and rendering.

During the aggregation process, page view events and other events are first written to the staging tables. Based on the contents of the staging tables, dimension tables are maintained. Dimension tables assign numerical ids to string-valued attributes, possible even condensing multi-column keys. This greatly reduces the space that is required for storing the actual data permanently, because long string values are only stored once. It also speeds up processing when comparing values and joining tables.

Using the staging tables and the dimension tables, the aggregation process fills the fact tables. Fact tables contain the fully processed information about each individual event, in particular about page views, but also about searches and transitions from page to page. Fact tables are long lived and may become extremely large, because individual page view events are often kept for years. While the staging tables are cleared automatically by the aggregation process, it is up to each individual installation to archive rows from fact tables, because the policies for doing so vary widely.

Two types of statistics are derived from the fact tables: overlay statistics and permanent statistics. Overlay statistics are intended to be shown as soon as possible in the In-Site Analytics component and it is acceptable that they have to be change later on, if additional data for past time intervals appears. They are also very finely resolved. On the other hand, permanent statistics are typically hourly or daily statistics that, once generated, should be immutable. This is reflected in the table structure, which contains tables for both kinds of statistics.

For repository analysis there is one table that is continuously updated in order to reflect the current repository state. Another set of snapshot tables stores the repository state at given times. Generally, as soon as the time for a snapshot arrives, the snapshot is taken. Even if there is a delay, the snapshot is still logically associated with the desired time for the snapshot.