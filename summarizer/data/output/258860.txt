

A BLOB property editor contains of a simple property toolbar, a preview area, a file upload control, and an optional MIME type chooser.

The property toolbar consists of a single button that empties the BLOB property (sets it to null).

The preview area is wrapped by a <h:outputLink> that opens the BLOB in a new browser window. This should result in starting a program that can handle the BLOB. Some MIME types are handled by the browser itself or by a browser plug-in. In the first meta template for any BLOB property, the link text contains the content type (MIME type) and size of the BLOB. The preview area is suppressed when the BLOB is empty.

Since JSF does not have a standard component for file upload, the ES4JSF component <es:inputFile> is used for uploading a BLOB from a file. The component is only shown if the document is checked out by the current user and the BLOB property is empty. The second condition simplifies the user interface for already filled BLOB properties. Replacing an existing BLOB can simply be achieved by removing the existing BLOB using the (only) property toolbar button. Then, the BLOB preview is replaced by the file upload control.

The MIME type chooser has to be used when you want to allow the user to override the content type of the file, which is by default determined by the browser (who usually delegates this task to the operating system). Some browsers derive awkward MIME types even for standard file types (e.g. the MIME type derived for JPEG files by Internet Explorer is "image/pjpeg", which seems to stand for "progressive JPEG"), while for some file types like MS Office documents, there are multiple MIME types is use. In these situations, the user can replace the option to let the browser guess the MIME type by the option to let the application determine the MIME type or specify an explicit MIME type (that of course must be compatible with the MIME type pattern defined for the BLOB property in *doctypes.xml). The application determines the MIME type using the file WEB-INF/mime.properties. See the comments in that file on how to define custom extension-to-MIME-type mappings.