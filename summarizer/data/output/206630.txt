

LoginPredicates

The login modules described in the previous section implement user authentication. So far a user may or may not log on to the CM Server whatever CoreMedia service he wants to use. The CapLoginModule and the LdapLoginModule can be configured to restrict user access to certain CoreMedia services. To do this, the two login modules use login predicates. A login predicate is a Java class which implements the interface LoginPredicate with the allowLogin() method. This method is invoked with a user and a CoreMedia service and returns a boolean value. A login module may use several login predicates. Login predicates are evaluated before user authentication in the login modules is actually performed and named licenses are consumed. The evaluation order for login predicates in a login module is as follows:

If no login predicate is specified in a login module, user authentication is performed against the login module.

If multiple login predicates are specified in a login module, they are evaluated in order of their index number <n>. If a login predicate for a user and service returns



false, then the user fails to log on immediately.


true, then user authentication is performed against the login module, unless a following login predicate fails.


null, then the result depends on the result of the other login predicates.

The user fails to log on if all login predicates return null.

The login predicate Java classes are:



hox.corem.login.NameLoginPredicate


hox.corem.login.AttributeLoginPredicate


hox.corem.login.JndiNameLoginPredicate


hox.corem.login.TrueLoginPredicate 

In the following these classes are described in detail. 

NameLoginPredicate 

This predicate returns true if the users name or the names of his groups match a regular expression, or null, if not: