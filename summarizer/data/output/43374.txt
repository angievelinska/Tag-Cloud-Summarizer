

The Wireless Application Protocol (WAP) suite targets the mobile market. These protocols enable telecommunication companies to relay digital information and services to mobile users.

Exchange format of choice is the Wireless Markup Language (WML) , an XML dialect designed for mobile devices with

low bandwidth connection,
unstable network access,
small client memory and
limited display and input facilities.

When you have an XML layer in your web application it is only a small step to provide mobile users with information for the following reasons:

WML is simple. It is easy to learn.
The basic formatting vocabulary for text markup is identical to HTML
In theory all you have to worry about is that you produce correct WML. The user agent (i.e. the phone) is supposed to do the layout for you.

Real life is harder. Nobody is going to use your mobile service if it's a drag to use. Since the design philosophy of mobile devices varies greatly some pages will look great and be easy to navigate on some devices and feel horribly on most others.

Here is what you can do in order to prevent this: Write a thin JSP wrapper around your web application that detect the kind of device used by your customer. Since standard HTTP requests are used this is easy. Simply read the information out of the request header. The servlet API provides methods for this.

Then you'll need one style sheet for each and every device used by your customers. This sounds harder than it actually is since there are not that many vendors out there and mobile devices by one vendor almost always share the same design philosophy and user interface capabilities.

Using the wrapper deploy information by transforming with the correct style sheet.

Finally, use the correct MimeType and encoding, since most devices will only accept UTF-8 or UTF-16:

<%@ page contentType="text/vnd.wap.wml; charset=UTF-8"%>