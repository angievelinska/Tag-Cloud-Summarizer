

Predicate classes enable selective display of objects. Depending on the context in which the <Predicate> element is used, different object types can be selected: 

<Filter> 
3* If the <Predicate> element is used in a <Filter> element, the documents shown in the document overview of the CoreMedia Editor can be filtered, due to different conditions. Thus, the objects to be filtered are documents of the type hox.corem.editor.proxy.DocumentTypeModel. 
<Treefilter> 
3* If the <Predicate> element is used in a <Treefilter> element, the folders shown in the folder view of the CoreMedia Editor can be filtered. The objects to be filtered are folders of the type hox.corem.editor.proxy.ResourceHolder. 
<DocumentTypes> 
3* If the <Predicate> element is used in a <DocumentTypes> element, the document types which can be created, moved, copied or selected in the document choosers of the CoreMedia Editor are filtered. Thus, the objects to be filtered are document types hox.corem.editor.proxy.DocumentTypeModel. 
<Processes> 
3* If the <Predicate> element is used in a <Processes> element, the workflows offered for initiating in the Menu File|New workflow... are filtered. The objects to be filtered are workflows of the type com.coremedia.workflow.WfProcess. 
<Workflow>
If the <Predicate> element is used in a <Workflow> element, the workflows and tasks shown in the sub views My tasks, Offered tasks and My workflows of the Workflow window can be filtered, if the <Predicate>  element is used in a <Workflow>  element. The objects to be filtered are com.coremedia.workflow.WfProcess and com.coremedia.workflow.WfTask.

Filtering can occur on both the client side and the server side. The predefined filters only run on the server side, while self-programmed filters must run on the client side. This is determined by the remote attribute of the <Filter> element. The default value "true" indicates server-side selection. 

Predicates for filtering document types 