

Users Tab customization

You can configure the user and group property columns in the main search result view of the user management tab and in the detail user or group view as described in Section 6.2.4 Presenting Browsable Lists, Tables and TableTrees in the CAE Developer Manual.


You can customize the following table models: 

defaultUserColumnModel and defaultGroupColumnModel ¿ for the main search result view,
shortUserColumnModel and shortGroupColumnModel ¿ for the detail user or group view. 

These table models are defined in editor-columns.xml. Please refer to beandoc for more information about the usage of the provided column models.


To add a customized column to the editor view, you should add a column bean definition to /spring/editor-columns.xml. You can extend an existing column or define you own bean column type. You can use the following beans - which all extend com.coremedia.editing.table.AbstractBeanColumn - for extension:

com.coremedia.sse.editor.table.SubjectColumn, for Subject properties.
com.coremedia.sse.editor.table.GroupColumn for Group properties.
com.coremedia.sse.editor.table.UserColumn for User properties.

If you define your own bean column type you should implement at least the Object getData(Object object) method (where the Object is of the type of your bean) and implement the java.lang.Class getType() method of the com.coremedia.editing.table.BeanColumn interface. The property name of your column bean definition is the key by which you get the column data on the JSP page. 

The views UserList.defaultTable.jsp and GroupList.defaultTable.jsp represent defaultUserColumnModel and defaultGroupColumnModel respectively whereas UserList.shortTable.jsp and GroupList.shortTable.jsp represent shortUserColumnModel and shortGroupColumnModel respectively.


For example, the bean emailAddressColumn can be defined as:


<bean id="emailAddressColumn" 
 class="com.coremedia.sse.editor.table.VCardEmailAddressColumn">
  <property name="name" value="emailAddress"/>
</bean>


and implemented in com.coremedia.sse.editor.table.VCardEmailAddressColumn:


public class VCardEmailAddressColumn extends SubjectColumn{
  public VCardEmailAddressColumn() {
    super();
  }
  public Class getType() {
    return String.class;
  }
  protected Object getData(Subject subject) {
    VCard vcard = (VCard) subject.getProfile().getCard("VCard");
    return vcard.getEmailAddress();
  }
}


On the JSP page, you get the emailAddressColumn data through the identifier ${row.valuesByColumn.emailAddress}.


