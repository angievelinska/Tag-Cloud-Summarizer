

Whenever you want to use full text search capabilities of a search engine, you need to add the content to the index first. The Social Software Extension uses an extension to the CAE Feeder for this process. You must configure each type of content you want to index in the file trigger.xml. The default configuration feeds information for users with personal stored in profile cards of the VCard type and for user content. You can see in the configuration that only the resource types Group, User and UserContent defined as keys in the map ssePopulators are indexed.

<bean id="ssePopulators" 
class="org.springframework.beans.factory.config.MapFactoryBean">
  <property name="sourceMap">
    <map>
      <entry key="User">
        <bean class="com.coremedia.sseimpl.feeder.base.
                     VCardUserFeedablePopulator"/>
      </entry>
      <entry key="Group">
        <bean class="com.coremedia.sseimpl.feeder.base.
                     VCardGroupFeedablePopulator"/>
      </entry>
      <entry key="UserContent">
        <bean class="com.coremedia.sseimpl.feeder.base.
                     UserContentFeedablePopulator"/>
      </entry>
    </map>
  </property>
</bean>

The key UserContent, for example, means that all beans of type UserContent or any known subtype use the class UserContentFeedablePopulator to transform a bean into a feedable item, which can be indexed. If you want a subtype of UserContent to be transformed by its own populator, you can define its own populator by just using the subtypes name as key.

When you want to index a custom resource type, you can either add your own implementation of the FeedablePopulator interface or you can use the customizable class BeanMappingFeedablePopulator provided by CAP Feeder. Please take a look at the CMS Content Application Developer Manual for instruction on how to use this customizable populator. The interface FeedablePopulator only has one method defined, if you want to write your own implementation:

void populate(MutableFeedable feedable, Object source)

Each property can be stored in a separate field and additionally in a default field, named textbody. Some search engines like FAST Enterprise require that you must define each field you want to search in. E.g. if you want to search for the word politics only in the field title, you must configure the index profile of the FAST Enterprise search engine first to be able to index fields with the name title first. The default index profile provided for CoreMedia content for FAST only provides certain fields like documenttype or isdeleted. For further information on how to extend your FAST index profile take a look at the FAST Enterprise manuals.