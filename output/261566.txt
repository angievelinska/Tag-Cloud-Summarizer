

Examples of user provider configurations

Authentication against a CMS Content Server

Authentication against a CMS ContentServer requires name, password and domain information.Therefore you need the following configuration steps to enable this kind of authentication:

First, configure a CMS-aware NamePasswordDomainVerifier, the CapConnectionAuthenticator. The verifier will validate the login data via the Unified API connection, which is given via the property 'connection'.

      <bean id="namePasswordVerifier" 
            class="com.coremedia.sseimpl.base.authentication.
                   CapConnectionAuthenticator">
        <property name="connection" ref="connection"/>
      </bean>


Next, set this verifier as the default user provider's strategy (Spring configuration). A bean defined with id "namePasswordVerifier" will override the default verifier and will be injected into the default user provider automatically (see framework/spring/sse/sse-authentication.xml and spring/sse/sse-authentication-example.xml).

Authentication against an LDAP directory server

First, configure a name and password verifier and configure an LDAP name / password verifier. Example:

    <bean id="namePasswordVerifier" 
          class="com.coremedia.sseimpl.base.authentication.
                 LdapNamePasswordVerifier">
      <property name="host" value="ldap.yourcompany.com"/>
      <property name="protocol" value="ldap"/>
      <property name="port" value="389" />
      <property name="dnPrefix" value="uid=" />
      <property name="dnSuffix" 
                value=",ou=users,dc=yourcompany,dc=com" />
      <property name="requestConcurrentBind" value="false"/>
    </bean>


See spring/sse/sse-authentication-example.xml for detailed documentation of the available properties.

Next, set this verifier as the default user provider's strategy (Spring configuration). A bean defined with id "namePasswordVerifier" will override the default verifier and will be injected into the default user provider automatically (see framework/spring/sse/sse-authentication.xml and spring/sse/sse-authentication-example.xml).

