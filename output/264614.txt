

Implementing a custom FeedItemDataProvider

The preceding example relies on a FeedItemDataProvider implementation for any bean in the LatestContent item list. An implementation for UserContent beans is provided with the Social Software Extension. If the default implementation does not suit your needs, or other types of beans have to be rendered as feed entries, all you need is a custom implementation of com.coremedia.feeds.FeedItemDataProvider interface (or subclass of AbstractFeedItemDataProvider).

An minimal feed item data provider for CMTeasable beans may look like this:

// inject linkFormatter, publicationService,
// set supportedType property to 
// com.coremedia.starterkit.common.contentbeans.base.CMTeasable

public class TeasableDataProvider extends 
             AbstractFeedItemDataProvider {
  // accessors not shown
  private PublicationService publicationService;

  private CMTeasable getTeasable(item) {
    return (CMTeasable) item;
  }

  public String getUri(FeedContext context, Object item) {
    return getTeasable(item).getContent().getId();
  }

  public String getAuthorName(FeedContext context, 
        Object item) {
    return getTeasable(item).getContent().getModifier()
                            .getName();
  }

  public String getTitle(FeedContext context, Object item) {
    return getTeasable(item).getTeaserTitle();
  }

  public Calendar getPublishedDate(FeedContext context, 
                 Object item) {
    Content content = getTeasable(item).getContent();
    return publicationService.isPublished(content)
    ? publicationService.getPublicationDate(content) : null;
  }

  public Calendar getModificationDate(FeedContext context, 
                  Object item) {
    return getTeasable(item).getContent().getModificationDate();
  }

  public FeedItemContent getContent(FeedContext context, 
                         Object item) {
    return convertRichtextToXhtmlContent(
             getTeasable(item).getTeaserText());
  }
}

In the default configuration, custom feed item data providers are configured in spring/sse/sse-services.xml.