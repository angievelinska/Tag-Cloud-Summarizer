

After the analysis process has run at least once, you can retrieve ¿ for each user ¿ similar users and recommended items.

Retrieving recommendations

The recommendation service gives you recommendations for a given user based on ratings. The average rating is generated by averaging all ratings for this item uniformly. The expected rating is based on the ratings of users similar to the current user, but it is normalized to take into account the user¿s rating habits, i.e., whether the user normally tends to rate items high or low. Please note that the expected rating may leave a given rating scale in some instances, e.g., when a user who rates very high on average is recommended an often highly rated item. You are encouraged to clip the value as needed. An Item that the user rated himself at the time of the last run of the recommendation  process are not returned by the recommendation service.

If you want to retrieve recommendations from the recommendation service, you can use the method getRecommendations from the interface RecommendationService as follows:

First, you have to obtain access to the RecommendationService instance. To do so, use Spring to inject the bean recommendationService into your objects. Assuming that you start from a User object in variable user, proceed as follows:

Collection<Recommendation> recommendations =
recommendationService.getRecommendations(user.getResource(), 10);

if (!recommendations.isEmpty()) {
  for (Recommendation recommendation : recommendations) {
    MyItem item = (MyItem) baseModule.getElementBeanFactory().
                     createBeanFor(recommendation.getResource());

    double expectedRating = recommendation.getExpectedRating();
    double averageRating = recommendation.getAverageRating();

    // process recommendation

  }
}

The type MyItem given above must be replaced by the target type of the association that you are using. 

Retrieving similar users

The recommendation service gives you also users who have rated similarly to a given user. Use the method getNeighbors from the RecommendationService.

You pass the resource identifying the user to the service and you retrieve a collection of Neighbor objects, that provide access to the resource of the neighboring user and to a number between -1 and 1 that indicates distance (negative numbers) or closeness (positive numbers) to that user.

A user is never a neighbor of himself.

Retrieving similar items

It is possible to retrieve items that were rated similarly compared with a given item. User the method getSimilarItems from the RecommendationService.

In this case, the argument resource must identify the item and the returned collection contains SimilarItem objects.

An item is never similar to itself.